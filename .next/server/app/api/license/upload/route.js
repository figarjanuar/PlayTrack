"use strict";(()=>{var e={};e.id=364,e.ids=[364],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5315:e=>{e.exports=require("path")},8815:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>g,patchFetch:()=>v,requestAsyncStorage:()=>f,routeModule:()=>c,serverHooks:()=>x,staticGenerationAsyncStorage:()=>m});var s={};t.r(s),t.d(s,{POST:()=>d});var a=t(9303),o=t(8716),i=t(670),n=t(7070);let u=require("fs/promises");var p=t(5315),l=t.n(p);async function d(e){try{let r=(await e.formData()).get("file");if(!r||!(r instanceof Blob))return n.NextResponse.json({message:"Invalid file"},{status:400});let t=await r.arrayBuffer(),s=Buffer.from(t),a=l().join(process.cwd(),"license.json");return await (0,u.writeFile)(a,s),n.NextResponse.json({message:"License uploaded successfully"})}catch(e){return console.error("Upload error:",e),n.NextResponse.json({message:"Failed to upload license"},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/license/upload/route",pathname:"/api/license/upload",filename:"route",bundlePath:"app/api/license/upload/route"},resolvedPagePath:"/Users/figar_jr/project/android-tv-timer/app/api/license/upload/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:f,staticGenerationAsyncStorage:m,serverHooks:x}=c,g="/api/license/upload/route";function v(){return(0,i.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:m})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[948,972],()=>t(8815));module.exports=s})();