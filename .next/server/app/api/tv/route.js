"use strict";(()=>{var e={};e.id=437,e.ids=[437],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7595:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>S,patchFetch:()=>T,requestAsyncStorage:()=>v,routeModule:()=>g,serverHooks:()=>f,staticGenerationAsyncStorage:()=>y});var n={};r.r(n),r.d(n,{DELETE:()=>m,GET:()=>c,POST:()=>l});var s=r(9303),i=r(8716),o=r(670),a=r(2021),u=r(5310),d=r(2880),p=r(7070);async function c(){await (0,a.u)(),await u.z.find();let e=(await d.TV.find().populate("currentSessionId").lean()).map(e=>({...e,session:e.currentSessionId&&"string"!=typeof e.currentSessionId?{startTime:e.currentSessionId.startTime,duration:e.currentSessionId.duration}:null}));return p.NextResponse.json({tvs:e})}async function l(e){await (0,a.u)();let{name:t,ipAddress:r,psType:n}=await e.json();if(!t||!r||!n)return p.NextResponse.json({message:"Missing required fields"},{status:400});let s=await d.TV.create({name:t,ipAddress:r,psType:n});return p.NextResponse.json(s)}async function m(e){await (0,a.u)();let{searchParams:t}=new URL(e.url),r=t.get("id");return r?(await d.TV.findByIdAndDelete(r),p.NextResponse.json({message:"TV deleted"})):p.NextResponse.json({message:"ID is required"},{status:400})}let g=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/tv/route",pathname:"/api/tv",filename:"route",bundlePath:"app/api/tv/route"},resolvedPagePath:"/Users/figar_jr/project/android-tv-timer/app/api/tv/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:v,staticGenerationAsyncStorage:y,serverHooks:f}=g,S="/api/tv/route";function T(){return(0,o.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:y})}},2021:(e,t,r)=>{r.d(t,{u:()=>o});var n=r(1185),s=r.n(n);let i=!1;async function o(){if(!i)try{await s().connect(process.env.MONGODB_URI||"mongodb://localhost:27017/tv_timer_prod"),i=!0,console.log("MongoDB connected")}catch(e){throw console.error("MongoDB connection error:",e),e}}},5310:(e,t,r)=>{r.d(t,{z:()=>o});var n=r(1185),s=r.n(n);let i=new(s()).Schema({tv:{type:s().Schema.Types.ObjectId,ref:"TV",required:!0},tvName:{type:String,required:!0},tvIpAddress:{type:String,required:!0},psType:{type:String,required:!0},startTime:{type:Date,required:!0},duration:{type:Number,required:!0},status:{type:String,enum:["Active","Ended"],default:"Active"},fee:{type:Number,required:!0}},{timestamps:!0}),o=s().models.Session||s().model("Session",i)},2880:(e,t,r)=>{r.d(t,{TV:()=>o});var n=r(1185),s=r.n(n);let i=new n.Schema({name:{type:String,required:!0},ipAddress:{type:String,required:!0},offlineCount:{type:Number,default:0},status:{type:String,enum:["Idle","Active","Offline","Ended"],default:"Idle"},currentSessionId:{type:s().Schema.Types.ObjectId,ref:"Session"},psType:{type:String,required:!0}},{timestamps:!0}),o=s().models.TV||s().model("TV",i)}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[948,972],()=>r(7595));module.exports=n})();